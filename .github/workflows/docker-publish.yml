# This is the final, optimized workflow using a two-job "Airlock" process.
# The slow builder job is now cached for performance.
name: Build and Publish Application Docker Image

on:
  push:
    branches: [ "main" ]

jobs:
  # --- JOB 1: BUILD THE ONNX MODEL ARTIFACT (CACHED) ---
  build_artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # R47: FIX - Replace the simple 'docker build' with a cached build step.
      - name: Build the builder image with cache
        uses: docker/build-push-action@v5
        with:
          # Point to the builder Dockerfile.
          file: ./Dockerfile.builder
          # Give the image a tag so we can reference it locally.
          tags: onnx-builder:latest
          # Do NOT push this image to the registry.
          push: false
          # Load the built image into the runner's local Docker daemon.
          load: true
          # Enable caching for this slow build step.
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create a temporary container from the builder
        # This command now finds the 'onnx-builder:latest' image locally.
        run: docker create --name temp_builder onnx-builder

      - name: Copy the /onnx_model artifact from the container
        run: docker cp temp_builder:/onnx_model ./onnx_model

      - name: Upload the ONNX model as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: onnx-model-artifact
          path: onnx_model

  # --- JOB 2: BUILD AND PUSH THE FINAL, THIN IMAGE (NOT CACHED) ---
  build_and_push_image:
    needs: build_artifact
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download the ONNX model artifact
        uses: actions/download-artifact@v4
        with:
          name: onnx-model-artifact
          path: .

      - name: Verify downloaded artifact
        run: ls -lR onnx_model

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push final image
        # This step remains simple and cache-free.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
          provenance: false

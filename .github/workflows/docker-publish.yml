# This is the final, guaranteed workflow using a two-job "Airlock" process.
# It physically separates the build artifact from the final image build.
# It does NOT use Git LFS.
name: Build and Publish Application Docker Image

on:
  push:
    branches: [ "main" ]

jobs:
  # --- JOB 1: BUILD THE ONNX MODEL ARTIFACT ---
  build_artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the builder image
        run: docker build -f Dockerfile.builder -t onnx-builder .

      - name: Create a temporary container from the builder
        run: docker create --name temp_builder onnx-builder

      - name: Copy the /onnx_model artifact from the container
        run: docker cp temp_builder:/onnx_model ./onnx_model

      - name: Upload the ONNX model as an artifact
        # This saves the clean 'onnx_model' directory for the next job.
        uses: actions/upload-artifact@v4
        with:
          name: onnx-model-artifact
          path: onnx_model

  # --- JOB 2: BUILD AND PUSH THE FINAL, THIN IMAGE ---
  build_and_push_image:
    # This job will only run after the artifact is successfully built.
    needs: build_artifact
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download the ONNX model artifact
        # This downloads the clean 'onnx_model' directory from the previous job.
        uses: actions/download-artifact@v4
        with:
          name: onnx-model-artifact
          # Download it to the root of the workspace.
          path: .

      - name: Verify downloaded artifact
        run: ls -lR onnx_model

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push final image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
          provenance: false
